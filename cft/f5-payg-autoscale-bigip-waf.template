{
 "AWSTemplateFormatVersion": "2010-09-09",
 "Conditions": {
  "noCustomImageId": {
   "Fn::Equals": [
    "OPTIONAL",
    {
     "Ref": "customImageId"
    }
   ]
  },
  "optin": {
   "Fn::Equals": [
    "Yes",
    {
     "Ref": "allowUsageAnalytics"
    }
   ]
  }
 },
 "Description": "Template v5.0.2: Deploys an AWS Auto Scaling group of F5 WAF PAYG instances. Example scaling policies and CloudWatch alarms are associated with the Auto Scaling group.",
 "Mappings": {
  "AWSBigipThrougput": {
   "1000Mbps": {
    "AdvancedWaf": "AdvancedWaf1000Mbps",
    "Best": "Best1000Mbps",
    "PerAppVeAwaf": "PerAppVeAwaf1000Mbps"
   },
   "200Mbps": {
    "AdvancedWaf": "AdvancedWaf200Mbps",
    "Best": "Best200Mbps",
    "PerAppVeAwaf": "PerAppVeAwaf200Mbps"
   },
   "25Mbps": {
    "AdvancedWaf": "AdvancedWaf25Mbps",
    "Best": "Best25Mbps",
    "PerAppVeAwaf": "PerAppVeAwaf25Mbps"
   },
   "5000Mbps": {
    "Best": "Best5000Mbps"
   }
  },
  "BigipRegionMap": {
   "ap-east-1": {
    "AdvancedWaf1000Mbps": "ami-81e992f0",
    "AdvancedWaf16vCPU": "ami-44e99235",
    "AdvancedWaf200Mbps": "ami-45e99234",
    "AdvancedWaf25Mbps": "ami-7cef940d",
    "AdvancedWaf8vCPU": "ami-26ed9657",
    "Best10000Mbps": "ami-abe893da",
    "Best1000Mbps": "ami-cdee95bc",
    "Best200Mbps": "ami-ceee95bf",
    "Best25Mbps": "ami-85e992f4",
    "Best5000Mbps": "ami-3ee8934f",
    "Better10000Mbps": "ami-2ced965d",
    "Better1000Mbps": "ami-2ded965c",
    "Better200Mbps": "ami-21e89350",
    "Better25Mbps": "ami-86e992f7",
    "Better5000Mbps": "ami-afe893de",
    "Good10000Mbps": "ami-8ae992fb",
    "Good1000Mbps": "ami-cbe992ba",
    "Good16vCPU": "ami-41e99230",
    "Good200Mbps": "ami-24e89355",
    "Good25Mbps": "ami-2cea915d",
    "Good5000Mbps": "ami-26e89357",
    "PerAppVeAwaf200Mbps": "ami-c7e992b6",
    "PerAppVeAwaf25Mbps": "ami-7eef940f",
    "PerAppVeLtm200Mbps": "ami-c8ee95b9",
    "PerAppVeLtm25Mbps": "ami-7def940c"
   },
   "ap-northeast-1": {
    "AdvancedWaf1000Mbps": "ami-02b153b9a8cca1243",
    "AdvancedWaf16vCPU": "ami-09124ecb2501f6f1b",
    "AdvancedWaf200Mbps": "ami-0278e79372836e342",
    "AdvancedWaf25Mbps": "ami-0efd05ec1b1725cf1",
    "AdvancedWaf8vCPU": "ami-0fb9458c3a5ac62dc",
    "Best10000Mbps": "ami-024075d912a63dc44",
    "Best1000Mbps": "ami-06346f6fb423ac468",
    "Best200Mbps": "ami-0bdfa7a67531770cc",
    "Best25Mbps": "ami-0e15d2b329ac6c5be",
    "Best5000Mbps": "ami-08ac6f04de766f0c7",
    "Better10000Mbps": "ami-085fe86653d655df8",
    "Better1000Mbps": "ami-0720acaec3f115b5a",
    "Better200Mbps": "ami-044c736a4b71ddbe0",
    "Better25Mbps": "ami-0d9cdfc426f73d610",
    "Better5000Mbps": "ami-0baffb46eab8ba106",
    "Good10000Mbps": "ami-082c57ee167446167",
    "Good1000Mbps": "ami-0bcbafb58edcf621d",
    "Good16vCPU": "ami-02d268d0c6b4105cc",
    "Good200Mbps": "ami-0b03a160234c89f59",
    "Good25Mbps": "ami-07a6e7cf66f0e21e4",
    "Good5000Mbps": "ami-062d29e0d82c98a7a",
    "PerAppVeAwaf200Mbps": "ami-0f3b15a74f8bdfd65",
    "PerAppVeAwaf25Mbps": "ami-0be4b7983d9df352a",
    "PerAppVeLtm200Mbps": "ami-073a51e19ce9f48c9",
    "PerAppVeLtm25Mbps": "ami-0dd1fd5b1d663cb68"
   },
   "ap-northeast-2": {
    "AdvancedWaf1000Mbps": "ami-0105905f2a71db853",
    "AdvancedWaf16vCPU": "ami-0bf464797a9316579",
    "AdvancedWaf200Mbps": "ami-0467c4cce5dce2cd5",
    "AdvancedWaf25Mbps": "ami-01e7c86b1866e0975",
    "AdvancedWaf8vCPU": "ami-0c9cdb2968676be9b",
    "Best10000Mbps": "ami-064c20a3a87f7d8ed",
    "Best1000Mbps": "ami-0c22722ada66823c8",
    "Best200Mbps": "ami-0fe0c9465f247d17f",
    "Best25Mbps": "ami-066c99ad0893d452f",
    "Best5000Mbps": "ami-06b7ff9c5ddb288e2",
    "Better10000Mbps": "ami-0c31ab8feac5e542c",
    "Better1000Mbps": "ami-0741b718ab01be73e",
    "Better200Mbps": "ami-0948082374b827c55",
    "Better25Mbps": "ami-028724d517e15d4ca",
    "Better5000Mbps": "ami-068c230d9db890161",
    "Good10000Mbps": "ami-0fed85b074d720a63",
    "Good1000Mbps": "ami-020867676a911f01b",
    "Good16vCPU": "ami-00be7c977142e6f7c",
    "Good200Mbps": "ami-00f83799b28e832e4",
    "Good25Mbps": "ami-0601db261124fae66",
    "Good5000Mbps": "ami-013e39e4c846a3429",
    "PerAppVeAwaf200Mbps": "ami-093eaa85869d5fd9f",
    "PerAppVeAwaf25Mbps": "ami-005b495479bcff0d2",
    "PerAppVeLtm200Mbps": "ami-0ea7c6086e2e686a4",
    "PerAppVeLtm25Mbps": "ami-026b6e8c04a9c044b"
   },
   "ap-south-1": {
    "AdvancedWaf1000Mbps": "ami-01efee9e68298e4a6",
    "AdvancedWaf16vCPU": "ami-095527e6620bd6045",
    "AdvancedWaf200Mbps": "ami-08dc0697e435a7acb",
    "AdvancedWaf25Mbps": "ami-000f7e2463c962852",
    "AdvancedWaf8vCPU": "ami-0d3387e537bea3f7d",
    "Best10000Mbps": "ami-00713d26024810b08",
    "Best1000Mbps": "ami-042eb98388638b6a6",
    "Best200Mbps": "ami-03f683d2cba61cf98",
    "Best25Mbps": "ami-0afe0f09d9c6fcef7",
    "Best5000Mbps": "ami-052dd272c43d0756d",
    "Better10000Mbps": "ami-091cf2f4c3644db07",
    "Better1000Mbps": "ami-02824beead26ad9db",
    "Better200Mbps": "ami-051344e576cd3e4e7",
    "Better25Mbps": "ami-0deaea504cf0c5512",
    "Better5000Mbps": "ami-0a369e01f7747701f",
    "Good10000Mbps": "ami-06e1982d2992183fe",
    "Good1000Mbps": "ami-07aed4537ce8b3147",
    "Good16vCPU": "ami-03c6e7465f590ee5d",
    "Good200Mbps": "ami-057149484c458d27b",
    "Good25Mbps": "ami-02502d05168f0d0cc",
    "Good5000Mbps": "ami-0bbc31c778f5014b4",
    "PerAppVeAwaf200Mbps": "ami-046607a229b6c00a4",
    "PerAppVeAwaf25Mbps": "ami-00f0a46f3e8e413c6",
    "PerAppVeLtm200Mbps": "ami-0729071d6592c9140",
    "PerAppVeLtm25Mbps": "ami-0447202dc604256e8"
   },
   "ap-southeast-1": {
    "AdvancedWaf1000Mbps": "ami-086f7708cb5bcfcfe",
    "AdvancedWaf16vCPU": "ami-00b3b16beec90ffeb",
    "AdvancedWaf200Mbps": "ami-00eb27d980b071c75",
    "AdvancedWaf25Mbps": "ami-05d12ee440ef0fc6b",
    "AdvancedWaf8vCPU": "ami-002aa5580e3db7b13",
    "Best10000Mbps": "ami-0163818fee536cf71",
    "Best1000Mbps": "ami-05dd0c9128793d36d",
    "Best200Mbps": "ami-012ef4ba45a121b29",
    "Best25Mbps": "ami-021395753ba351dac",
    "Best5000Mbps": "ami-0efb6cd7444dfdb8c",
    "Better10000Mbps": "ami-0e94f2f15c2bb5f25",
    "Better1000Mbps": "ami-09a476b4ec7982373",
    "Better200Mbps": "ami-0e53c6861f565dd63",
    "Better25Mbps": "ami-0f3884f8b1b789098",
    "Better5000Mbps": "ami-06dc3ee39057ecf09",
    "Good10000Mbps": "ami-0e8d083b0d051ea1a",
    "Good1000Mbps": "ami-0f545b6ba5fe89a62",
    "Good16vCPU": "ami-09039bf89e02f97e3",
    "Good200Mbps": "ami-03dc175eb96b796cb",
    "Good25Mbps": "ami-01d9f00f3bd70d4b4",
    "Good5000Mbps": "ami-0e040866c467fe54f",
    "PerAppVeAwaf200Mbps": "ami-046d9d74c61cd7476",
    "PerAppVeAwaf25Mbps": "ami-01c85cd051b192f39",
    "PerAppVeLtm200Mbps": "ami-0f69be8af425c995e",
    "PerAppVeLtm25Mbps": "ami-039bbd38d3b6900c8"
   },
   "ap-southeast-2": {
    "AdvancedWaf1000Mbps": "ami-0d589feef6fc700e1",
    "AdvancedWaf16vCPU": "ami-0118def5ac3aefacb",
    "AdvancedWaf200Mbps": "ami-0c7c7a706017dabff",
    "AdvancedWaf25Mbps": "ami-02fb0e4e6d76673cf",
    "AdvancedWaf8vCPU": "ami-0908e628cd9733c78",
    "Best10000Mbps": "ami-0f905348b56c9395b",
    "Best1000Mbps": "ami-0a583c9812094fe5f",
    "Best200Mbps": "ami-046b6b248db0d172b",
    "Best25Mbps": "ami-029344bc774377296",
    "Best5000Mbps": "ami-08bc54588c4c68fbf",
    "Better10000Mbps": "ami-0d119199e4bb75abc",
    "Better1000Mbps": "ami-0ca805ca759624f76",
    "Better200Mbps": "ami-0d092f2fec0ba39e8",
    "Better25Mbps": "ami-0652bcbafead9e3ce",
    "Better5000Mbps": "ami-0613876da3c223ce6",
    "Good10000Mbps": "ami-025f7a94f8cde8cbd",
    "Good1000Mbps": "ami-08aaa1c86e925f382",
    "Good16vCPU": "ami-0cbbc01362031619d",
    "Good200Mbps": "ami-0d4c6c2f53e0dc0fa",
    "Good25Mbps": "ami-0c434b81894d53be9",
    "Good5000Mbps": "ami-0bf456d14cee0fcf5",
    "PerAppVeAwaf200Mbps": "ami-01900396ea2087816",
    "PerAppVeAwaf25Mbps": "ami-038f92a72c3e26098",
    "PerAppVeLtm200Mbps": "ami-0e645a6a7b8dfafad",
    "PerAppVeLtm25Mbps": "ami-0f46baa18c0a4d00f"
   },
   "ca-central-1": {
    "AdvancedWaf1000Mbps": "ami-0a508f6fae98b45f9",
    "AdvancedWaf16vCPU": "ami-08150d3f1e444fc74",
    "AdvancedWaf200Mbps": "ami-0400aa1f900616620",
    "AdvancedWaf25Mbps": "ami-0effce8e6376633a0",
    "AdvancedWaf8vCPU": "ami-0bd55170ac5660ac3",
    "Best10000Mbps": "ami-015ca4159eb500eff",
    "Best1000Mbps": "ami-0b3516ae895169117",
    "Best200Mbps": "ami-02d05239da0c20893",
    "Best25Mbps": "ami-09d470bead257f2cc",
    "Best5000Mbps": "ami-0761ef65a814c0c44",
    "Better10000Mbps": "ami-06f76132355106481",
    "Better1000Mbps": "ami-0e546dd2709f2b213",
    "Better200Mbps": "ami-0b23be2ee41fa0c69",
    "Better25Mbps": "ami-0c1f73f45f413b4c4",
    "Better5000Mbps": "ami-02456691ce5c16eb7",
    "Good10000Mbps": "ami-07d0ecfac02d51d07",
    "Good1000Mbps": "ami-0a4c91ab751a980b9",
    "Good16vCPU": "ami-074d3319298bdc43b",
    "Good200Mbps": "ami-0f30080fa7e34e4a8",
    "Good25Mbps": "ami-02d14d4431b731c50",
    "Good5000Mbps": "ami-066462fe5a95c49d7",
    "PerAppVeAwaf200Mbps": "ami-040fb7948e46e9de8",
    "PerAppVeAwaf25Mbps": "ami-06b8b06447364c7e1",
    "PerAppVeLtm200Mbps": "ami-008323ea256167dc0",
    "PerAppVeLtm25Mbps": "ami-03b8396ae4384cbe5"
   },
   "eu-central-1": {
    "AdvancedWaf1000Mbps": "ami-0918d832d36f568b3",
    "AdvancedWaf16vCPU": "ami-00b63a52d3531a4e1",
    "AdvancedWaf200Mbps": "ami-07da84c0f98cea039",
    "AdvancedWaf25Mbps": "ami-01a5bb6d9d66d3f09",
    "AdvancedWaf8vCPU": "ami-02ce2246b980138a8",
    "Best10000Mbps": "ami-034b41fc7a535ef7f",
    "Best1000Mbps": "ami-0b9fcb94f166230da",
    "Best200Mbps": "ami-0ef2f0d2bc4be6bd3",
    "Best25Mbps": "ami-0726fe6705284633c",
    "Best5000Mbps": "ami-0cafcab3fc0028b50",
    "Better10000Mbps": "ami-099fd8901b14929ff",
    "Better1000Mbps": "ami-0e9eb715946cfd4f6",
    "Better200Mbps": "ami-065187d9ccd603248",
    "Better25Mbps": "ami-03fcce7149624cbfc",
    "Better5000Mbps": "ami-0d86bff13b6579af3",
    "Good10000Mbps": "ami-0e7b00a959a4e81ba",
    "Good1000Mbps": "ami-00c1c099bbecf6b79",
    "Good16vCPU": "ami-0245afa25baf9d727",
    "Good200Mbps": "ami-04516343ec992f4c7",
    "Good25Mbps": "ami-0e357c2225aab8e59",
    "Good5000Mbps": "ami-045158af302d068d6",
    "PerAppVeAwaf200Mbps": "ami-096f8a90c85d30e10",
    "PerAppVeAwaf25Mbps": "ami-07dc72bc1f2c7daad",
    "PerAppVeLtm200Mbps": "ami-0003b843c32920d44",
    "PerAppVeLtm25Mbps": "ami-0522a983cd607c101"
   },
   "eu-north-1": {
    "AdvancedWaf1000Mbps": "ami-46119a38",
    "AdvancedWaf16vCPU": "ami-78119a06",
    "AdvancedWaf200Mbps": "ami-c51c97bb",
    "AdvancedWaf25Mbps": "ami-1b149f65",
    "AdvancedWaf8vCPU": "ami-f513988b",
    "Best10000Mbps": "ami-d81398a6",
    "Best1000Mbps": "ami-2b129955",
    "Best200Mbps": "ami-2a129954",
    "Best25Mbps": "ami-7a109b04",
    "Best5000Mbps": "ami-3e1c9740",
    "Better10000Mbps": "ami-a01c97de",
    "Better1000Mbps": "ami-361c9748",
    "Better200Mbps": "ami-5f139821",
    "Better25Mbps": "ami-6112991f",
    "Better5000Mbps": "ami-75109b0b",
    "Good10000Mbps": "ami-2c119a52",
    "Good1000Mbps": "ami-b61c97c8",
    "Good16vCPU": "ami-7f119a01",
    "Good200Mbps": "ami-1e119a60",
    "Good25Mbps": "ami-b41c97ca",
    "Good5000Mbps": "ami-59139827",
    "PerAppVeAwaf200Mbps": "ami-5b119a25",
    "PerAppVeAwaf25Mbps": "ami-64109b1a",
    "PerAppVeLtm200Mbps": "ami-6f129911",
    "PerAppVeLtm25Mbps": "ami-d01c97ae"
   },
   "eu-west-1": {
    "AdvancedWaf1000Mbps": "ami-0d11d7e06c9c8b718",
    "AdvancedWaf16vCPU": "ami-0ec29aac976d1c346",
    "AdvancedWaf200Mbps": "ami-071903f06cbc01bf9",
    "AdvancedWaf25Mbps": "ami-052c3a1c3ea68d1df",
    "AdvancedWaf8vCPU": "ami-062ddb5680a46919e",
    "Best10000Mbps": "ami-0b8c5be0aca360036",
    "Best1000Mbps": "ami-0fc471431e084f4e8",
    "Best200Mbps": "ami-0e2c01c2421777b7a",
    "Best25Mbps": "ami-0a75fa28ad3d1bafd",
    "Best5000Mbps": "ami-0a94ad5d2ccd54f3c",
    "Better10000Mbps": "ami-0d96013ccd22c7123",
    "Better1000Mbps": "ami-0d09b0a134c3ab6ef",
    "Better200Mbps": "ami-0c0c666402583241f",
    "Better25Mbps": "ami-05bad639e6fb37790",
    "Better5000Mbps": "ami-0fe06e27c2fb58619",
    "Good10000Mbps": "ami-095a54fd8872c9e0c",
    "Good1000Mbps": "ami-05f0625ebf611e42d",
    "Good16vCPU": "ami-05b6ee48ca0b22022",
    "Good200Mbps": "ami-04ab5fa4d1bd4ef46",
    "Good25Mbps": "ami-0b09d6807b03f5b9a",
    "Good5000Mbps": "ami-0dc7316099c844529",
    "PerAppVeAwaf200Mbps": "ami-0d2acb3df2ad045f2",
    "PerAppVeAwaf25Mbps": "ami-06bb0510c11f4c896",
    "PerAppVeLtm200Mbps": "ami-0958e269c1e61cbef",
    "PerAppVeLtm25Mbps": "ami-068a74c602dd40767"
   },
   "eu-west-2": {
    "AdvancedWaf1000Mbps": "ami-066f135f48ce1085e",
    "AdvancedWaf16vCPU": "ami-020bc65f114203f32",
    "AdvancedWaf200Mbps": "ami-0739286892779fd89",
    "AdvancedWaf25Mbps": "ami-04fd46600ec2f2b06",
    "AdvancedWaf8vCPU": "ami-029810932722edbe6",
    "Best10000Mbps": "ami-05c558df3964e7182",
    "Best1000Mbps": "ami-0ae960e9acc8d994b",
    "Best200Mbps": "ami-093e7395e78531684",
    "Best25Mbps": "ami-04ae6503b1b20981c",
    "Best5000Mbps": "ami-0f7c5779abde3a198",
    "Better10000Mbps": "ami-08d104b004cf89b3d",
    "Better1000Mbps": "ami-01103e16af9bbbcf2",
    "Better200Mbps": "ami-0d6a69f74fc580d48",
    "Better25Mbps": "ami-0501c3fe215fd6fa4",
    "Better5000Mbps": "ami-070efcca556e87f71",
    "Good10000Mbps": "ami-02137d656239d32ed",
    "Good1000Mbps": "ami-0cff28d14bb3763fa",
    "Good16vCPU": "ami-0988f7b5caef51afc",
    "Good200Mbps": "ami-0f9f92213b276b0dc",
    "Good25Mbps": "ami-0087bcb0ac828ba9f",
    "Good5000Mbps": "ami-0b23109a071f39b7a",
    "PerAppVeAwaf200Mbps": "ami-031e0e1bb32f436fc",
    "PerAppVeAwaf25Mbps": "ami-08a53fa4f3985f8c4",
    "PerAppVeLtm200Mbps": "ami-035044b866705e242",
    "PerAppVeLtm25Mbps": "ami-01e24b89c774f75d9"
   },
   "eu-west-3": {
    "AdvancedWaf1000Mbps": "ami-05b4ed417c831ff56",
    "AdvancedWaf16vCPU": "ami-0123bf4cf71c80820",
    "AdvancedWaf200Mbps": "ami-0fa1b09d6f508d74d",
    "AdvancedWaf25Mbps": "ami-0c743de6fe2bf077f",
    "AdvancedWaf8vCPU": "ami-021f23743eb9d2fff",
    "Best10000Mbps": "ami-0ae30ce2f82931d25",
    "Best1000Mbps": "ami-0f3a6336bf299035f",
    "Best200Mbps": "ami-06cfe6410a596c7b7",
    "Best25Mbps": "ami-067095cab56b1359e",
    "Best5000Mbps": "ami-0f478407ab6fd565d",
    "Better10000Mbps": "ami-037716cd505b9d4b4",
    "Better1000Mbps": "ami-05cf7a80f8ea5e0d5",
    "Better200Mbps": "ami-0cbcadf1f82faeab8",
    "Better25Mbps": "ami-0910a5cc1acdea695",
    "Better5000Mbps": "ami-022908133ec2cc102",
    "Good10000Mbps": "ami-0028427558bde72f9",
    "Good1000Mbps": "ami-07a7dcbb969c3fd76",
    "Good16vCPU": "ami-0fef8dd21484309ef",
    "Good200Mbps": "ami-0ad3914e9e0456da7",
    "Good25Mbps": "ami-0bf57b33844cbd11c",
    "Good5000Mbps": "ami-02c9dd16c6824b801",
    "PerAppVeAwaf200Mbps": "ami-016d346f708686a8a",
    "PerAppVeAwaf25Mbps": "ami-08de7483f8ca3803c",
    "PerAppVeLtm200Mbps": "ami-023a697234e44c66b",
    "PerAppVeLtm25Mbps": "ami-0396260d8cd4009c8"
   },
   "sa-east-1": {
    "AdvancedWaf1000Mbps": "ami-00a331dbe4e3c52fc",
    "AdvancedWaf16vCPU": "ami-0b66d7b9eed04e2cd",
    "AdvancedWaf200Mbps": "ami-0d97808f0aa198691",
    "AdvancedWaf25Mbps": "ami-0c7dc1eb3dddc754b",
    "AdvancedWaf8vCPU": "ami-016ca7612b906dacb",
    "Best10000Mbps": "ami-0cdd0e379d12dc43b",
    "Best1000Mbps": "ami-07ba5c2548c030c65",
    "Best200Mbps": "ami-047ced3bf3af4d125",
    "Best25Mbps": "ami-01b074975b8544cc1",
    "Best5000Mbps": "ami-093bf3f9370782d95",
    "Better10000Mbps": "ami-04bb08eb5aee1b697",
    "Better1000Mbps": "ami-04bc8fbfa5f60b6fa",
    "Better200Mbps": "ami-05a17d0e08466bb83",
    "Better25Mbps": "ami-07f9fea0030f5a54a",
    "Better5000Mbps": "ami-04b281e09943e126a",
    "Good10000Mbps": "ami-023f45d2e07b5a675",
    "Good1000Mbps": "ami-02144124f4a8bee9d",
    "Good16vCPU": "ami-06af69bfad1c39fe7",
    "Good200Mbps": "ami-01722513ca38407df",
    "Good25Mbps": "ami-065127117223bfe3b",
    "Good5000Mbps": "ami-05ea8fd1c29c77481",
    "PerAppVeAwaf200Mbps": "ami-02bb5275e2a89ef8b",
    "PerAppVeAwaf25Mbps": "ami-074d48082c414a147",
    "PerAppVeLtm200Mbps": "ami-063c46ec64536b63d",
    "PerAppVeLtm25Mbps": "ami-03811850303f12639"
   },
   "us-east-1": {
    "AdvancedWaf1000Mbps": "ami-07f8ab31d81324144",
    "AdvancedWaf16vCPU": "ami-0ae023b03f91d7c01",
    "AdvancedWaf200Mbps": "ami-0df009945f81f59df",
    "AdvancedWaf25Mbps": "ami-0f3eb9304d3085cf0",
    "AdvancedWaf8vCPU": "ami-07113c50e05fce636",
    "Best10000Mbps": "ami-0220768f95837b3cf",
    "Best1000Mbps": "ami-0c7f5fbca70177519",
    "Best200Mbps": "ami-0c7427067eb8fb29d",
    "Best25Mbps": "ami-0b72b51efda7abd17",
    "Best5000Mbps": "ami-00d016c8f558b8984",
    "Better10000Mbps": "ami-0fa1dcfb491ad9772",
    "Better1000Mbps": "ami-0ee410d2438e6a405",
    "Better200Mbps": "ami-0ce141e54782a0dd5",
    "Better25Mbps": "ami-0fe9f53a35f8e9080",
    "Better5000Mbps": "ami-0ae35d73d2a9fa83c",
    "Good10000Mbps": "ami-004d9377a798fe2d7",
    "Good1000Mbps": "ami-0a0893561de9a1b8a",
    "Good16vCPU": "ami-08eb3395a72b67bb9",
    "Good200Mbps": "ami-0262483a6f536470b",
    "Good25Mbps": "ami-08b874c9ea31d6951",
    "Good5000Mbps": "ami-01e1381905d76afce",
    "PerAppVeAwaf200Mbps": "ami-0aa2ff3c3d2aac8f3",
    "PerAppVeAwaf25Mbps": "ami-06b8c73c662879d4a",
    "PerAppVeLtm200Mbps": "ami-04d88260ee3abe6c3",
    "PerAppVeLtm25Mbps": "ami-0fa4f1e689718b583"
   },
   "us-east-2": {
    "AdvancedWaf1000Mbps": "ami-0507d00ea8773bbda",
    "AdvancedWaf16vCPU": "ami-013d9b3295e3640b8",
    "AdvancedWaf200Mbps": "ami-08781af985ac8f8d9",
    "AdvancedWaf25Mbps": "ami-0d0e23abdab63ff62",
    "AdvancedWaf8vCPU": "ami-029016c6b1139c4ba",
    "Best10000Mbps": "ami-033c567952507b587",
    "Best1000Mbps": "ami-00a1741d45f78218f",
    "Best200Mbps": "ami-062f8fe9965020f99",
    "Best25Mbps": "ami-078d8345285696726",
    "Best5000Mbps": "ami-03a9a540fc557abb2",
    "Better10000Mbps": "ami-0320c689f062ffb5b",
    "Better1000Mbps": "ami-05a80f217481eb33a",
    "Better200Mbps": "ami-031b65754b3d3cbfa",
    "Better25Mbps": "ami-0aed2a089c58a9174",
    "Better5000Mbps": "ami-04f26ede26cb62a7a",
    "Good10000Mbps": "ami-024494c4f023d4ff0",
    "Good1000Mbps": "ami-07f216822dddae2fc",
    "Good16vCPU": "ami-0aa6e6ea9aa86bdf5",
    "Good200Mbps": "ami-01de5f05b89b7b31b",
    "Good25Mbps": "ami-06182df378b3460e3",
    "Good5000Mbps": "ami-026336c7dfbe45970",
    "PerAppVeAwaf200Mbps": "ami-09d0f7a203573a639",
    "PerAppVeAwaf25Mbps": "ami-0257fa67fc5844d9a",
    "PerAppVeLtm200Mbps": "ami-052b05ac4233dc1d1",
    "PerAppVeLtm25Mbps": "ami-01d9e1898e57b692a"
   },
   "us-gov-west-1": {
    "AdvancedWaf1000Mbps": "ami-be7204df",
    "AdvancedWaf16vCPU": "ami-df1761be",
    "AdvancedWaf200Mbps": "ami-b57503d4",
    "AdvancedWaf25Mbps": "ami-8a7402eb",
    "AdvancedWaf8vCPU": "ami-720c7a13",
    "Best10000Mbps": "ami-9d196ffc",
    "Best1000Mbps": "ami-ec50268d",
    "Best200Mbps": "ami-9e5e28ff",
    "Best25Mbps": "ami-e5532584",
    "Best5000Mbps": "ami-735f2912",
    "Better10000Mbps": "ami-920c7af3",
    "Better1000Mbps": "ami-ce691faf",
    "Better200Mbps": "ami-5e681e3f",
    "Better25Mbps": "ami-da6315bb",
    "Better5000Mbps": "ami-46542227",
    "Good10000Mbps": "ami-6f12640e",
    "Good1000Mbps": "ami-0e72046f",
    "Good16vCPU": "ami-fa11679b",
    "Good200Mbps": "ami-5a0a7c3b",
    "Good25Mbps": "ami-e7057386",
    "Good5000Mbps": "ami-e67c0a87",
    "PerAppVeAwaf200Mbps": "ami-45087e24",
    "PerAppVeAwaf25Mbps": "ami-4d76002c",
    "PerAppVeLtm200Mbps": "ami-e4295f85",
    "PerAppVeLtm25Mbps": "ami-7d16601c"
   },
   "us-west-1": {
    "AdvancedWaf1000Mbps": "ami-05616a4590d992e14",
    "AdvancedWaf16vCPU": "ami-0e2914f4cfaf593fe",
    "AdvancedWaf200Mbps": "ami-0bef5f3d4079c77d3",
    "AdvancedWaf25Mbps": "ami-002b7456390c2e4f8",
    "AdvancedWaf8vCPU": "ami-0dca4ef582d33402f",
    "Best10000Mbps": "ami-0995321da0082ae80",
    "Best1000Mbps": "ami-027bcab3653dfdf87",
    "Best200Mbps": "ami-0be5a3714f8bfc515",
    "Best25Mbps": "ami-04b94c3e635f12e9e",
    "Best5000Mbps": "ami-022374b9463873121",
    "Better10000Mbps": "ami-083e2b6bf0692a96b",
    "Better1000Mbps": "ami-0e9899af571a74ecf",
    "Better200Mbps": "ami-06950752632dc1301",
    "Better25Mbps": "ami-017b443d2724dfa4b",
    "Better5000Mbps": "ami-0643a50b4f4d374bd",
    "Good10000Mbps": "ami-03d68668a019d874a",
    "Good1000Mbps": "ami-02a2fda5038638c4c",
    "Good16vCPU": "ami-0aec9887c3a7c1416",
    "Good200Mbps": "ami-07285cdd40ba3d92d",
    "Good25Mbps": "ami-07da3e0cafddd4269",
    "Good5000Mbps": "ami-00e4cd163912dbbb9",
    "PerAppVeAwaf200Mbps": "ami-0d908a13bd4eade35",
    "PerAppVeAwaf25Mbps": "ami-0c47540e3506e6d53",
    "PerAppVeLtm200Mbps": "ami-0741b74d27e797437",
    "PerAppVeLtm25Mbps": "ami-0ad247c0f7ee290d4"
   },
   "us-west-2": {
    "AdvancedWaf1000Mbps": "ami-0165de452b61bdcf7",
    "AdvancedWaf16vCPU": "ami-04306b02f2ca02e82",
    "AdvancedWaf200Mbps": "ami-0ed99f7ebad5a263d",
    "AdvancedWaf25Mbps": "ami-04027e677eff61a76",
    "AdvancedWaf8vCPU": "ami-0a141895d9aca25e0",
    "Best10000Mbps": "ami-02e9e3a2f3206217c",
    "Best1000Mbps": "ami-03ce933a656a420ea",
    "Best200Mbps": "ami-03504398103e17b8d",
    "Best25Mbps": "ami-0bb381c2a2b66f1bf",
    "Best5000Mbps": "ami-0ce67cc02e938c376",
    "Better10000Mbps": "ami-09f40ba95ee21cdbf",
    "Better1000Mbps": "ami-0461f4b0861922ec5",
    "Better200Mbps": "ami-0cab8f1b3c32bab49",
    "Better25Mbps": "ami-058699c4f4e134cf9",
    "Better5000Mbps": "ami-0e29f856f701a358d",
    "Good10000Mbps": "ami-046f454c13bc1fbdd",
    "Good1000Mbps": "ami-0848ff2c1de81fce5",
    "Good16vCPU": "ami-048100985e4c3ef4e",
    "Good200Mbps": "ami-0cf6131b51e047f19",
    "Good25Mbps": "ami-0a6ebc6858503dff8",
    "Good5000Mbps": "ami-09058628c06d49395",
    "PerAppVeAwaf200Mbps": "ami-0c352e22cb0ef1dfd",
    "PerAppVeAwaf25Mbps": "ami-0b7adcf9ec0d8a19e",
    "PerAppVeLtm200Mbps": "ami-0b669bb76a63d89fe",
    "PerAppVeLtm25Mbps": "ami-0a10ebab27021bc20"
   }
  },
  "Transformations": {
   "Boolean": {
    "No": "false",
    "Yes": "true"
   }
  }
 },
 "Metadata": {
  "AWS::CloudFormation::Interface": {
   "ParameterGroups": [
    {
     "Label": {
      "default": "DEPLOYMENT"
     },
     "Parameters": [
      "deploymentName"
     ]
    },
    {
     "Label": {
      "default": "NETWORKING CONFIGURATION"
     },
     "Parameters": [
      "Vpc",
      "availabilityZones",
      "subnets",
      "restrictedSrcAddress",
      "restrictedSrcAddressApp",
      "bigipElasticLoadBalancer",
      "provisionPublicIP"
     ]
    },
    {
     "Label": {
      "default": "INSTANCE CONFIGURATION"
     },
     "Parameters": [
      "sshKey",
      "instanceType",
      "throughput",
      "imageName",
      "customImageId",
      "adminUsername",
      "managementGuiPort",
      "timezone",
      "ntpServer",
      "bigIpModules"
     ]
    },
    {
     "Label": {
      "default": "AUTO SCALING CONFIGURATION"
     },
     "Parameters": [
      "scalingMinSize",
      "scalingMaxSize",
      "scaleDownBytesThreshold",
      "scaleUpBytesThreshold",
      "lowCpuThreshold",
      "highCpuThreshold",
      "notificationEmail"
     ]
    },
    {
     "Label": {
      "default": "VIRTUAL SERVICE CONFIGURATION"
     },
     "Parameters": [
      "virtualServicePort",
      "applicationPort",
      "appInternalDnsName",
      "applicationPoolTagKey",
      "applicationPoolTagValue",
      "declarationUrl",
      "policyLevel"
     ]
    },
    {
     "Label": {
      "default": "TAGS"
     },
     "Parameters": [
      "application",
      "environment",
      "group",
      "owner",
      "costcenter"
     ]
    },
    {},
    {
     "Label": {
      "default": "TEMPLATE ANALYTICS"
     },
     "Parameters": [
      "allowUsageAnalytics"
     ]
    }
   ],
   "ParameterLabels": {
    "Vpc": {
     "default": "VPC ID"
    },
    "adminUsername": {
     "default": "BIG-IP Admin User for clustering"
    },
    "allowUsageAnalytics": {
     "default": "Send Anonymous Statistics to F5"
    },
    "appInternalDnsName": {
     "default": "Application Pool DNS"
    },
    "application": {
     "default": "Application"
    },
    "applicationPoolTagKey": {
     "default": "Application Pool Tag Key"
    },
    "applicationPoolTagValue": {
     "default": "Application Pool Tag Value"
    },
    "applicationPort": {
     "default": "Application Pool Member Port"
    },
    "availabilityZones": {
     "default": "Availability Zone(s)"
    },
    "bigIpModules": {
     "default": "BIG-IP Modules"
    },
    "bigipElasticLoadBalancer": {
     "default": "Elastic Load Balancer for BIG-IP VEs"
    },
    "costcenter": {
     "default": "Cost Center"
    },
    "customImageId": {
     "default": "Custom Image Id"
    },
    "declarationUrl": {
     "default": "AS3 Declaration URL"
    },
    "deploymentName": {
     "default": "Deployment Name"
    },
    "environment": {
     "default": "Environment"
    },
    "group": {
     "default": "Group"
    },
    "highCpuThreshold": {
     "default": "High CPU Percentage Threshold"
    },
    "imageName": {
     "default": "F5 Image Name"
    },
    "instanceType": {
     "default": "AWS Instance Size"
    },
    "lowCpuThreshold": {
     "default": "Low CPU Percentage Threshold"
    },
    "managementGuiPort": {
     "default": "Management Port"
    },
    "notificationEmail": {
     "default": "Notification Email"
    },
    "ntpServer": {
     "default": "NTP Server"
    },
    "owner": {
     "default": "Owner"
    },
    "policyLevel": {
     "default": "Web Application Firewall Policy Level"
    },
    "provisionPublicIP": {
     "default": "Provision Public IP addresses for the BIG-IP interfaces"
    },
    "restrictedSrcAddress": {
     "default": "Restricted Source Address to BIG-IP"
    },
    "restrictedSrcAddressApp": {
     "default": "Restricted Source Address to Application"
    },
    "scaleDownBytesThreshold": {
     "default": "Scale Down Bytes Threshold"
    },
    "scaleUpBytesThreshold": {
     "default": "Scale Up Bytes Threshold"
    },
    "scalingMaxSize": {
     "default": "Maximum Instances"
    },
    "scalingMinSize": {
     "default": "Minimum Instances"
    },
    "sshKey": {
     "default": "SSH Key Name"
    },
    "subnets": {
     "default": "Subnet ID(s)"
    },
    "throughput": {
     "default": "Maximum Throughput"
    },
    "timezone": {
     "default": "Timezone (Olson)"
    },
    "virtualServicePort": {
     "default": "Virtual Service Port"
    }
   }
  },
  "Version": "5.0.2"
 },
 "Outputs": {
  "bigipAutoscaleGroup": {
   "Description": "BIG-IP Autoscale Group",
   "Value": {
    "Ref": "BigipAutoscaleGroup"
   }
  },
  "bigipExternalSecurityGroup": {
   "Description": "BIG-IP Security Group (External or Public)",
   "Value": {
    "Ref": "bigipExternalSecurityGroup"
   }
  },
  "s3Bucket": {
   "Description": "BIG-IP S3 Bucket",
   "Value": {
    "Ref": "S3Bucket"
   }
  }
 },
 "Parameters": {
  "Vpc": {
   "ConstraintDescription": "This must be an existing VPC within the working region.",
   "Type": "AWS::EC2::VPC::Id"
  },
  "adminUsername": {
   "AllowedPattern": "[a-zA-Z0-9._-]+",
   "ConstraintDescription": "Verify your BIG-IP admin username. Note that the user name can contain only alphanumeric characters, periods ( . ), underscores ( _ ), or hyphens ( - ). The user name cannot be any of the following: adm, apache, bin, daemon, guest, lp, mail, manager, mysql, named, nobody, ntp, operator, partition, password, pcap, postfix, radvd, root, rpc, rpm, sshd, syscheck, tomcat, uucp, or vcsa.",
   "Default": "cluster-admin",
   "Description": "BIG-IP Admin User for clustering",
   "MaxLength": 255,
   "MinLength": 1,
   "Type": "String"
  },
  "allowUsageAnalytics": {
   "AllowedValues": [
    "Yes",
    "No"
   ],
   "Default": "Yes",
   "Description": "This deployment can send anonymous statistics to F5 to help us determine how to improve our solutions. If you select **No** statistics are not sent.",
   "Type": "String"
  },
  "appInternalDnsName": {
   "Default": "www.example.com",
   "Description": "DNS name poolapp.example.com for the application pool.  This is not required if you are using the Service Discovery feature.",
   "Type": "String"
  },
  "application": {
   "Default": "f5app",
   "Description": "Name of the Application Tag",
   "Type": "String"
  },
  "applicationPoolTagKey": {
   "Default": "default",
   "Description": "This is used for the Service Discovery feature. If you specify a non-default value here, the template automatically discovers the pool members you have tagged with this key and the value you specify next.",
   "Type": "String"
  },
  "applicationPoolTagValue": {
   "Default": "default",
   "Description": "This is used for the Service Discovery feature. If you specify a non-default value here, the template automatically discovers the pool members you have tagged with the key you specified and this value.",
   "Type": "String"
  },
  "applicationPort": {
   "ConstraintDescription": "Must be a valid port number (1-65535).",
   "Default": 80,
   "Description": "Port for the application pool member on BIG-IP VE",
   "MaxValue": 65535,
   "MinValue": 1,
   "Type": "Number"
  },
  "availabilityZones": {
   "Description": "Availability Zones where you want to deploy BIG-IP VEs (we recommend at least 2)",
   "Type": "List<AWS::EC2::AvailabilityZone::Name>"
  },
  "bigIpModules": {
   "Default": "ltm:nominal,asm:nominal",
   "Description": "Comma separated list of modules and levels to provision, for example: ltm:nominal,asm:nominal",
   "Type": "String"
  },
  "bigipElasticLoadBalancer": {
   "Default": "ExampleBigipELB",
   "Description": "Name of the AWS Elastic Load Balancer for the BIG-IP VEs",
   "Type": "String"
  },
  "costcenter": {
   "Default": "f5costcenter",
   "Description": "Name of the Cost Center Tag",
   "Type": "String"
  },
  "customImageId": {
   "ConstraintDescription": "Must be a valid AMI Id",
   "Default": "OPTIONAL",
   "Description": "If you would like to deploy using a custom BIG-IP image, provide the AMI Id.  **Note**: Unless specifically required, leave the default of **OPTIONAL**",
   "MaxLength": 255,
   "MinLength": 1,
   "Type": "String"
  },
  "declarationUrl": {
   "AllowedPattern": "^(http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$|^none$|^default$",
   "Default": "default",
   "Description": "URL for the AS3 declaration JSON file to be deployed. If left at **default**, the recommended F5 application service configuration will be applied. Enter **none** to deploy without a service configuration.",
   "Type": "String"
  },
  "deploymentName": {
   "Default": "example",
   "Description": "Name the template uses to create object names",
   "MaxLength": 25,
   "Type": "String"
  },
  "environment": {
   "Default": "f5env",
   "Description": "Name of the Environment Tag",
   "Type": "String"
  },
  "group": {
   "Default": "f5group",
   "Description": "Name of the Group Tag",
   "Type": "String"
  },
  "highCpuThreshold": {
   "ConstraintDescription": "Select a value between 0 to 100",
   "Default": 80,
   "Description": "High CPU Percentage threshold to begin scaling up BIG-IP VE instances",
   "MaxValue": 100,
   "MinValue": 0,
   "Type": "Number"
  },
  "imageName": {
   "AllowedValues": [
    "Best",
    "AdvancedWaf",
    "PerAppVeAwaf"
   ],
   "ConstraintDescription": "Must be a valid F5 BIG-IP VE image type",
   "Default": "Best",
   "Description": "F5 BIG-IP Performance Type",
   "Type": "String"
  },
  "instanceType": {
   "AllowedValues": [
    "m3.2xlarge",
    "m4.xlarge",
    "m4.2xlarge",
    "m4.4xlarge",
    "m4.10xlarge",
    "m5.large",
    "m5.xlarge",
    "m5.2xlarge",
    "m5.4xlarge",
    "c3.4xlarge",
    "c3.8xlarge",
    "c4.4xlarge",
    "c4.8xlarge",
    "c5.large",
    "c5.xlarge",
    "c5.2xlarge",
    "c5.4xlarge",
    "cc2.8xlarge",
    "c5n.2xlarge",
    "c5n.4xlarge"
   ],
   "ConstraintDescription": "Must be a valid EC2 instance type for BIG-IP",
   "Default": "m3.2xlarge",
   "Description": "AWS instance type",
   "Type": "String"
  },
  "lowCpuThreshold": {
   "ConstraintDescription": "Select a value between 0 to 100",
   "Default": 0,
   "Description": "Low CPU Percentage threshold to begin scaling down BIG-IP VE instances",
   "MaxValue": 100,
   "MinValue": 0,
   "Type": "Number"
  },
  "managementGuiPort": {
   "ConstraintDescription": "Must be a valid, unused port on the BIG-IP.",
   "Default": "8443",
   "Description": "Port for the BIG-IP management Configuration utility",
   "Type": "Number"
  },
  "notificationEmail": {
   "AllowedPattern": ".+@.+",
   "ConstraintDescription": "Must be a valid email address.",
   "Description": "Valid email address to send Auto Scaling event notifications",
   "Type": "String"
  },
  "ntpServer": {
   "Default": "0.pool.ntp.org",
   "Description": "NTP server for this implementation",
   "Type": "String"
  },
  "owner": {
   "Default": "f5owner",
   "Description": "Name of the Owner Tag",
   "Type": "String"
  },
  "policyLevel": {
   "AllowedValues": [
    "low",
    "medium",
    "high"
   ],
   "ConstraintDescription": "Select the WAF Policy Level you want to use",
   "Default": "high",
   "Description": "WAF Policy Level you want to use to protect the applications",
   "Type": "String"
  },
  "provisionPublicIP": {
   "AllowedValues": [
    "Yes",
    "No"
   ],
   "Default": "Yes",
   "Description": "Whether or not to provision Public IP Addresses for the BIG-IP Network Interfaces. By Default no Public IP addresses are provisioned.",
   "Type": "String"
  },
  "restrictedSrcAddress": {
   "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
   "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x.",
   "Description": " The IP address range used to SSH and access managment GUI on the EC2 instances",
   "MaxLength": "18",
   "MinLength": "9",
   "Type": "String"
  },
  "restrictedSrcAddressApp": {
   "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
   "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x.",
   "Description": " The IP address range that can be used to access web traffic (80/443) to the EC2 instances",
   "MaxLength": "18",
   "MinLength": "9",
   "Type": "String"
  },
  "scaleDownBytesThreshold": {
   "Default": 10000,
   "Description": "Incoming bytes threshold to begin scaling down BIG-IP VE instances",
   "Type": "Number"
  },
  "scaleUpBytesThreshold": {
   "Default": 35000,
   "Description": "Incoming bytes threshold to begin scaling up BIG-IP VE instances",
   "Type": "Number"
  },
  "scalingMaxSize": {
   "ConstraintDescription": "Must be a number between 2-8",
   "Default": 3,
   "Description": "Maximum number of BIG-IP instances (2-8) that can be created in the Auto Scale Group",
   "MaxValue": 8,
   "MinValue": 2,
   "Type": "Number"
  },
  "scalingMinSize": {
   "ConstraintDescription": "Must be a number between 1-8",
   "Default": 1,
   "Description": "Minimum number of BIG-IP instances (1-8) you want available in the Auto Scale Group",
   "MaxValue": 8,
   "MinValue": 1,
   "Type": "Number"
  },
  "sshKey": {
   "Description": "EC2 KeyPair to enable SSH access to the BIG-IP instance",
   "Type": "AWS::EC2::KeyPair::KeyName"
  },
  "subnets": {
   "ConstraintDescription": "The subnet IDs must be within an existing VPC",
   "Description": "Public or external subnets for the availability zones",
   "Type": "List<AWS::EC2::Subnet::Id>"
  },
  "throughput": {
   "AllowedValues": [
    "25Mbps",
    "200Mbps",
    "1000Mbps",
    "5000Mbps"
   ],
   "ConstraintDescription": "Select the BIG-IP throughput you want to use",
   "Default": "1000Mbps",
   "Description": "Maximum amount of throughput for BIG-IP VE",
   "Type": "String"
  },
  "timezone": {
   "Default": "UTC",
   "Description": "Olson timezone string. Acceptable values can be found from /usr/share/zoneinfo directory located on BIG-IP. Also, see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones referencing the TZ* column for Olsen timezone examples.",
   "Type": "String"
  },
  "virtualServicePort": {
   "ConstraintDescription": "Must be a valid port number (1-65535).",
   "Default": 80,
   "Description": "Port for the virtual service on BIG-IP VE",
   "MaxValue": 65535,
   "MinValue": 1,
   "Type": "Number"
  }
 },
 "Resources": {
  "BigipAutoScalingAccessRole": {
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sts:AssumeRole"
       ],
       "Effect": "Allow",
       "Principal": {
        "Service": [
         "ec2.amazonaws.com"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Path": "/",
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": [
          "s3:ListBucket"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:*:s3:::",
            {
             "Ref": "S3Bucket"
            }
           ]
          ]
         }
        },
        {
         "Action": [
          "s3:PutObject",
          "s3:GetObject",
          "s3:DeleteObject"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:*:s3:::",
            {
             "Ref": "S3Bucket"
            },
            "/*"
           ]
          ]
         }
        },
        {
         "Action": [
          "sqs:SendMessage",
          "sqs:ReceiveMessage",
          "sqs:DeleteMessage"
         ],
         "Effect": "Allow",
         "Resource": {
          "Fn::GetAtt": [
           "SQSQueue",
           "Arn"
          ]
         }
        },
        {
         "Action": [
          "autoscaling:DescribeAutoScalingGroups",
          "autoscaling:DescribeAutoScalingInstances",
          "autoscaling:SetInstanceProtection",
          "ec2:DescribeInstances",
          "ec2:DescribeInstanceStatus",
          "ec2:DescribeAddresses",
          "ec2:AssociateAddress",
          "ec2:DisassociateAddress",
          "ec2:DescribeNetworkInterfaces",
          "ec2:DescribeNetworkInterfaceAttribute",
          "ec2:DescribeRouteTables",
          "ec2:ReplaceRoute",
          "ec2:assignprivateipaddresses",
          "ec2:DescribeTags",
          "ec2:CreateTags",
          "ec2:DeleteTags",
          "sts:AssumeRole",
          "cloudwatch:PutMetricData"
         ],
         "Effect": "Allow",
         "Resource": [
          "*"
         ]
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "BigipAutoScalingAcccessPolicy"
     }
    ]
   },
   "Type": "AWS::IAM::Role"
  },
  "BigipAutoScalingInstanceProfile": {
   "Properties": {
    "Path": "/",
    "Roles": [
     {
      "Ref": "BigipAutoScalingAccessRole"
     }
    ]
   },
   "Type": "AWS::IAM::InstanceProfile"
  },
  "BigipAutoscaleGroup": {
   "Properties": {
    "Cooldown": 1500,
    "DesiredCapacity": {
     "Ref": "scalingMinSize"
    },
    "HealthCheckGracePeriod": 1500,
    "HealthCheckType": "EC2",
    "LaunchConfigurationName": {
     "Ref": "BigipLaunchConfig"
    },
    "LoadBalancerNames": [
     {
      "Ref": "bigipElasticLoadBalancer"
     }
    ],
    "MaxSize": {
     "Ref": "scalingMaxSize"
    },
    "MetricsCollection": [
     {
      "Granularity": "1Minute"
     }
    ],
    "MinSize": {
     "Ref": "scalingMinSize"
    },
    "NotificationConfigurations": [
     {
      "NotificationTypes": [
       "autoscaling:EC2_INSTANCE_LAUNCH",
       "autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
       "autoscaling:EC2_INSTANCE_TERMINATE",
       "autoscaling:EC2_INSTANCE_TERMINATE_ERROR"
      ],
      "TopicARN": {
       "Ref": "SNSTopic"
      }
     }
    ],
    "Tags": [
     {
      "Key": "Application",
      "PropagateAtLaunch": "true",
      "Value": {
       "Ref": "application"
      }
     },
     {
      "Key": "Costcenter",
      "PropagateAtLaunch": "true",
      "Value": {
       "Ref": "costcenter"
      }
     },
     {
      "Key": "Environment",
      "PropagateAtLaunch": "true",
      "Value": {
       "Ref": "environment"
      }
     },
     {
      "Key": "Group",
      "PropagateAtLaunch": "true",
      "Value": {
       "Ref": "group"
      }
     },
     {
      "Key": "Name",
      "PropagateAtLaunch": "true",
      "Value": {
       "Fn::Join": [
        "",
        [
         "BIG-IP Autoscale Instance: ",
         {
          "Ref": "deploymentName"
         }
        ]
       ]
      }
     },
     {
      "Key": "Owner",
      "PropagateAtLaunch": "true",
      "Value": {
       "Ref": "owner"
      }
     }
    ],
    "VPCZoneIdentifier": {
     "Ref": "subnets"
    }
   },
   "Type": "AWS::AutoScaling::AutoScalingGroup",
   "UpdatePolicy": {
    "AutoScalingRollingUpdate": {
     "MaxBatchSize": "1",
     "MinInstancesInService": "1",
     "PauseTime": "PT30M"
    }
   }
  },
  "BigipHighCpuAlarm": {
   "DependsOn": "BigipAutoscaleGroup",
   "Properties": {
    "ActionsEnabled": "true",
    "AlarmActions": [
     {
      "Ref": "BigipScaleUpPolicy"
     }
    ],
    "AlarmDescription": "CPU usage percentage exceeds average threshold after 1 successive interval of 1 minute",
    "ComparisonOperator": "GreaterThanThreshold",
    "EvaluationPeriods": "1",
    "MetricName": "tmm-stat",
    "Namespace": {
     "Ref": "BigipAutoscaleGroup"
    },
    "Period": "60",
    "Statistic": "Average",
    "Threshold": {
     "Ref": "highCpuThreshold"
    }
   },
   "Type": "AWS::CloudWatch::Alarm"
  },
  "BigipHighbytesAlarm": {
   "DependsOn": "BigipAutoscaleGroup",
   "Properties": {
    "ActionsEnabled": "true",
    "AlarmActions": [
     {
      "Ref": "BigipScaleUpPolicy"
     }
    ],
    "AlarmDescription": "Throughput exceeds average threshold after 1 successive interval of 1 minute",
    "ComparisonOperator": "GreaterThanThreshold",
    "EvaluationPeriods": "1",
    "MetricName": "throughput-per-sec",
    "Namespace": {
     "Ref": "BigipAutoscaleGroup"
    },
    "Period": "60",
    "Statistic": "Average",
    "Threshold": {
     "Ref": "scaleUpBytesThreshold"
    }
   },
   "Type": "AWS::CloudWatch::Alarm"
  },
  "BigipLaunchConfig": {
   "Metadata": {
    "AWS::CloudFormation::Init": {
     "config": {
      "commands": {
       "000-disable-1nicautoconfig": {
        "command": "/usr/bin/setdb provision.1nicautoconfig disable"
       },
       "010-install-libs": {
        "command": {
         "Fn::Join": [
          " ",
          [
           "mkdir -p /var/log/cloud/aws;",
           "nohup /config/installCloudLibs.sh",
           "&>> /var/log/cloud/aws/install.log < /dev/null &"
          ]
         ]
        }
       },
       "020-generate-password": {
        "command": {
         "Fn::Join": [
          "",
          [
           "nohup /config/waitThenRun.sh",
           " f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js",
           " --signal PASSWORD_CREATED",
           " --file f5-rest-node",
           " --cl-args '/config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/generatePassword --file /config/cloud/aws/.adminPassword --encrypt'",
           " --log-level silly",
           " -o /var/log/cloud/aws/generatePassword.log",
           " &>> /var/log/cloud/aws/install.log < /dev/null",
           " &"
          ]
         ]
        }
       },
       "030-create-admin-user": {
        "command": {
         "Fn::Join": [
          "",
          [
           "nohup /config/waitThenRun.sh",
           " f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js",
           " --wait-for PASSWORD_CREATED",
           " --signal ADMIN_CREATED",
           " --file /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/createUser.sh",
           " --cl-args '--user ",
           {
            "Ref": "adminUsername"
           },
           " --password-file /config/cloud/aws/.adminPassword",
           " --password-encrypted",
           "'",
           " --log-level silly",
           " -o /var/log/cloud/aws/createUser.log",
           " &>> /var/log/cloud/aws/install.log < /dev/null",
           " &"
          ]
         ]
        }
       },
       "040-network-config": {
        "command": {
         "Fn::Join": [
          " ",
          [
           "nohup /config/waitThenRun.sh",
           "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js",
           "--file /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/aws/1nicSetup.sh",
           "--cwd /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/aws",
           "--log-level silly",
           "-o /var/log/cloud/aws/1nicSetup.log",
           "--wait-for ADMIN_CREATED",
           "--signal NETWORK_CONFIG_DONE",
           "&>> /var/log/cloud/aws/install.log < /dev/null",
           "&"
          ]
         ]
        }
       },
       "050-onboard-BIG-IP": {
        "command": {
         "Fn::If": [
          "optin",
          {
           "Fn::Join": [
            " ",
            [
             "DEPLOYMENTID=`echo \"",
             {
              "Ref": "AWS::StackId"
             },
             "\"|sha512sum|cut -d \" \" -f 1`;",
             "CUSTOMERID=`echo \"",
             {
              "Ref": "AWS::AccountId"
             },
             "\"|sha512sum|cut -d \" \" -f 1`;",
             "NAME_SERVER=`/config/cloud/aws/getNameServer.sh eth0`;",
             "nohup /config/waitThenRun.sh",
             "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/onboard.js",
             "--log-level silly",
             "--wait-for NETWORK_CONFIG_DONE",
             "--signal ONBOARD_DONE",
             "-o /var/log/cloud/aws/onboard.log",
             "--install-ilx-package file:///config/cloud/f5-appsvcs-3.5.1-5.noarch.rpm",
             "--host localhost",
             "--user",
             {
              "Ref": "adminUsername"
             },
             "--password-url file:///config/cloud/aws/.adminPassword",
             "--password-encrypted",
             "--hostname `curl http://169.254.169.254/latest/meta-data/hostname`",
             "--ntp ",
             {
              "Ref": "ntpServer"
             },
             "--tz ",
             {
              "Ref": "timezone"
             },
             "--dns ${NAME_SERVER}",
             "--port 8443",
             "--ssl-port ",
             {
              "Ref": "managementGuiPort"
             },
             "--modules ",
             {
              "Ref": "bigIpModules"
             },
             "--metrics \"cloudName:aws,region:${REGION},bigipVersion:14.1.2-0.0.37,customerId:${CUSTOMERID},deploymentId:${DEPLOYMENTID},templateName:f5-payg-autoscale-bigip-waf.template,templateVersion:5.0.2,licenseType:hourly\"",
             "-d tm.tcpudptxchecksum:software-only ",
             "--ping",
             "&>> /var/log/cloud/aws/install.log < /dev/null",
             "&"
            ]
           ]
          },
          {
           "Fn::Join": [
            " ",
            [
             "NAME_SERVER=`/config/cloud/aws/getNameServer.sh eth0`;",
             "nohup /config/waitThenRun.sh",
             "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/onboard.js",
             "--log-level silly",
             "--wait-for NETWORK_CONFIG_DONE",
             "--signal ONBOARD_DONE",
             "-o /var/log/cloud/aws/onboard.log",
             "--install-ilx-package file:///config/cloud/f5-appsvcs-3.5.1-5.noarch.rpm",
             "--host localhost",
             "--port 8443",
             "--user",
             {
              "Ref": "adminUsername"
             },
             "--password-url file:///config/cloud/aws/.adminPassword",
             "--password-encrypted",
             "--hostname `curl http://169.254.169.254/latest/meta-data/hostname`",
             "--ntp ",
             {
              "Ref": "ntpServer"
             },
             "--tz ",
             {
              "Ref": "timezone"
             },
             "--dns ${NAME_SERVER}",
             "--ssl-port ",
             {
              "Ref": "managementGuiPort"
             },
             "--modules ",
             {
              "Ref": "bigIpModules"
             },
             "-d tm.tcpudptxchecksum:software-only ",
             "--ping",
             "&>> /var/log/cloud/aws/install.log < /dev/null",
             "&"
            ]
           ]
          }
         ]
        }
       },
       "060-custom-config": {
        "command": {
         "Fn::Join": [
          " ",
          [
           "nohup /config/waitThenRun.sh",
           "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js",
           "--log-level silly",
           "--file /config/cloud/aws/custom-config.sh",
           "--cwd /config/cloud/aws",
           "-o /var/log/cloud/aws/custom-config.log",
           "--wait-for ONBOARD_DONE",
           "&>> /var/log/cloud/aws/install.log < /dev/null",
           "&"
          ]
         ]
        }
       }
      },
      "files": {
       "/config/cloud/asm-policy-linux.tar.gz": {
        "group": "root",
        "mode": "000755",
        "owner": "root",
        "source": "http://cdn.f5.com/product/cloudsolutions/solution-scripts/asm-policy-linux.tar.gz"
       },
       "/config/cloud/aws/custom-config.sh": {
        "content": {
         "Fn::Join": [
          "",
          [
           "#!/bin/bash\n",
           "# Generated from 5.0.2\n",
           "date\n",
           ". /config/cloud/aws/onboard_config_vars\n",
           "tmsh create sys icall script uploadMetrics definition { exec /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs-aws/scripts/reportMetrics.sh }\n",
           "tmsh create sys icall handler periodic /Common/metricUploadHandler { first-occurrence now interval 60 script /Common/uploadMetrics }\n",
           "tmsh save /sys config\n",
           "echo 'Attempting to Join or Initiate Autoscale Cluster' \n",
           "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/autoscale.js --cloud aws --provider-options s3Bucket:${s3Bucket},sqsUrl:${sqsUrl},mgmtPort:${managementGuiPort} --host localhost --port ${managementGuiPort} --user ${adminUsername} --password-url file:///config/cloud/aws/.adminPassword --password-encrypted --device-group autoscale-group --block-sync -c join --log-level silly --output /var/log/cloud/aws/autoscale.log \n",
           "if [ -f /config/cloud/master ]; then \n",
           "  if `jq '.ucsLoaded' < /config/cloud/master`; then \n",
           "    echo \"UCS backup loaded from backup folder in S3 bucket ${s3Bucket}.\"\n",
           "  else\n",
           "    echo 'SELF-SELECTED as Master ... Initiated Autoscale Cluster ... Loading default config'\n",
           "    tmsh modify cm device-group autoscale-group asm-sync enabled\n",
           "    tmsh load sys application template /config/cloud/f5.http.v1.2.0rc7.tmpl\n",
           "    tmsh load sys application template /config/cloud/aws/f5.cloud_logger.v1.0.0.tmpl\n",
           "    tmsh load sys application template /config/cloud/aws/f5.service_discovery.tmpl\n",
           "    source /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/waitForBigip.sh;wait-for-bigip\n",
           "    ### START CUSTOM CONFIGURATION\n",
           "    deployed=\"no\"\n",
           "    url_regex=\"(http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\/.*)?$\"\n",
           "    file_loc=\"/config/cloud/custom_config\"\n",
           "    if [[ $declarationUrl =~ $url_regex ]]; then\n",
           "       response_code=$(/usr/bin/curl -sk -w \"%{http_code}\" $declarationUrl -o $file_loc)\n",
           "       if [[ $response_code == 200 ]]; then\n",
           "           echo \"Custom config download complete; checking for valid JSON.\"\n",
           "           cat $file_loc | jq .class\n",
           "           if [[ $? == 0 ]]; then\n",
           "               response_code=$(/usr/bin/curl -skvvu ${adminUsername}:$passwd -w \"%{http_code}\" -X POST -H \"Content-Type: application/json\" https://localhost:${managementGuiPort}/mgmt/shared/appsvcs/declare -d @$file_loc -o /dev/null)\n",
           "           if [[ $response_code == 200 || $response_code == 502 ]]; then\n",
           "               echo \"Deployment of custom application succeeded.\"\n",
           "               deployed=\"yes\"\n",
           "           else\n",
           "               echo \"Failed to deploy custom application; continuing...\"\n",
           "           fi\n",
           "       else\n",
           "           echo \"Custom config was not valid JSON, continuing...\"\n",
           "       fi\n",
           "       else\n",
           "           echo \"Failed to download custom config; continuing...\"\n",
           "       fi\n",
           "   else\n",
           "      echo \"Custom config was not a URL, continuing...\"\n",
           "   fi\n",
           "   if [[ $deployed == \"no\" && $declarationUrl == \"default\" ]]; then\n",
           "        asm_policy=\"/config/cloud/asm-policy-linux-${policyLevel}.xml\"\n",
           "        payload=$(echo $payload | jq -c --arg asm_policy $asm_policy --arg pool_http_port $applicationPort --arg vs_http_port $virtualServicePort '.waf.Shared.policyWAF.file = $asm_policy | .waf.http.pool.members[0].servicePort = ($pool_http_port | tonumber) | .waf.http.serviceMain.virtualPort = ($vs_http_port | tonumber)')\n",
           "    payload=$(echo $payload | jq -c 'del(.waf.http.serviceMain.serverTLS)')\n",
           "        if [ \"${applicationPoolTagKey}\" != \"default\" ]\n",
           "        then\n",
           "            payload=$(echo $payload | jq -c 'del(.waf.http.pool.members[0].autoPopulate) | del(.waf.http.pool.members[0].hostname)')\n",
           "            payload=$(echo $payload | jq -c --arg tagKey $applicationPoolTagKey --arg tagValue $applicationPoolTagValue --arg region $region '.waf.http.pool.members[0].tagKey = $tagKey | .waf.http.pool.members[0].tagValue = $tagValue | .waf.http.pool.members[0].region = $region')\n",
           "        else\n",
           "            payload=$(echo $payload | jq -c 'del(.waf.http.pool.members[0].updateInterval) | del(.waf.http.pool.members[0].tagKey) | del(.waf.http.pool.members[0].tagValue) | del(.waf.http.pool.members[0].addressRealm) | del(.waf.http.pool.members[0].region)')\n",
           "            payload=$(echo $payload | jq -c --arg pool_member $appInternalDnsName '.waf.http.pool.members[0].hostname = $pool_member | .waf.http.pool.members[0].addressDiscovery = \"fqdn\"')\n",
           "        fi\n",
           "        response_code=$(/usr/bin/curl -skvvu ${adminUsername}:$passwd -w \"%{http_code}\" -X POST -H \"Content-Type: application/json\" https://localhost:${managementGuiPort}/mgmt/shared/appsvcs/declare -d \"$payload\" -o /dev/null)\n",
           "        if [[ $response_code == 200 || $response_code == 502  ]]; then\n",
           "            echo 'Deployment of recommended application succeeded.'\n",
           "        else\n",
           "            echo 'Failed to deploy recommended application'\n",
           "            exit 1\n",
           "        fi\n",
           "    fi\n",
           "    ### END CUSTOM CONFIGURATION\n",
           "    tmsh save /sys config\n",
           "    f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/autoscale.js --cloud aws --provider-options s3Bucket:${s3Bucket},sqsUrl:${sqsUrl},mgmtPort:${managementGuiPort}",
           "      --host localhost --port ${managementGuiPort} --user ${adminUsername} --password-url file:///config/cloud/aws/.adminPassword --password-encrypted -c unblock-sync --log-level silly --output /var/log/cloud/aws/autoscale.log \n",
           "  fi\n",
           "fi\n",
           "(crontab -l 2>/dev/null; echo '*/1 * * * * /config/cloud/aws/run_autoscale_update.sh') | crontab -\n",
           "(crontab -l 2>/dev/null; echo '59 23 * * * /config/cloud/aws/run_autoscale_backup.sh') | crontab -\n",
           "tmsh save /sys config\n",
           "date\n",
           "echo 'custom-config.sh complete'\n"
          ]
         ]
        },
        "group": "root",
        "mode": "000755",
        "owner": "root"
       },
       "/config/cloud/aws/f5.cloud_logger.v1.0.0.tmpl": {
        "group": "root",
        "mode": "000755",
        "owner": "root",
        "source": "http://cdn.f5.com/product/cloudsolutions/iapps/common/f5-cloud-logger/v1.0.0/f5.cloud_logger.v1.0.0.tmpl"
       },
       "/config/cloud/aws/f5.service_discovery.tmpl": {
        "group": "root",
        "mode": "000755",
        "owner": "root",
        "source": "http://cdn.f5.com/product/cloudsolutions/iapps/common/f5-service-discovery/v2.3.2/f5.service_discovery.tmpl"
       },
       "/config/cloud/aws/getNameServer.sh": {
        "content": {
         "Fn::Join": [
          "\n",
          [
           "INTERFACE=$1",
           "INTERFACE_MAC=`ifconfig ${INTERFACE} | egrep ether | awk '{print tolower($2)}'`",
           "VPC_CIDR_BLOCK=`curl -s -f --retry 20 http://169.254.169.254/latest/meta-data/network/interfaces/macs/${INTERFACE_MAC}/vpc-ipv4-cidr-block`",
           "VPC_NET=${VPC_CIDR_BLOCK%/*}",
           "NAME_SERVER=`echo ${VPC_NET} | awk -F. '{ printf \"%d.%d.%d.%d\", $1, $2, $3, $4+2 }'`",
           "echo $NAME_SERVER"
          ]
         ]
        },
        "group": "root",
        "mode": "000755",
        "owner": "root"
       },
       "/config/cloud/aws/onboard_config_vars": {
        "content": {
         "Fn::Join": [
          "",
          [
           "#!/bin/bash\n",
           "# Generated from 5.0.2\n",
           "hostname=`curl http://169.254.169.254/latest/meta-data/hostname`\n",
           "region='",
           {
            "Ref": "AWS::Region"
           },
           "'\n",
           "deploymentName='",
           {
            "Ref": "deploymentName"
           },
           "'\n",
           "adminUsername='",
           {
            "Ref": "adminUsername"
           },
           "'\n",
           "managementGuiPort='",
           {
            "Ref": "managementGuiPort"
           },
           "'\n",
           "timezone='",
           {
            "Ref": "timezone"
           },
           "'\n",
           "ntpServer='",
           {
            "Ref": "ntpServer"
           },
           "'\n",
           "virtualServicePort='",
           {
            "Ref": "virtualServicePort"
           },
           "'\n",
           "applicationPort='",
           {
            "Ref": "applicationPort"
           },
           "'\n",
           "appInternalDnsName='",
           {
            "Ref": "appInternalDnsName"
           },
           "'\n",
           "applicationPoolTagKey='",
           {
            "Ref": "applicationPoolTagKey"
           },
           "'\n",
           "applicationPoolTagValue='",
           {
            "Ref": "applicationPoolTagValue"
           },
           "'\n",
           "s3Bucket='",
           {
            "Ref": "S3Bucket"
           },
           "'\n",
           "sqsUrl='",
           {
            "Ref": "SQSQueue"
           },
           "'\n",
           "declarationUrl='",
           {
            "Ref": "declarationUrl"
           },
           "'\n",
           "policyLevel='",
           {
            "Ref": "policyLevel"
           },
           "'\n",
           "passwd=$(f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/decryptDataFromFile.js --data-file /config/cloud/aws/.adminPassword)\n",
           "payload='{\"class\":\"ADC\",\"schemaVersion\":\"3.0.0\",\"label\":\"autoscale_waf\",\"id\":\"AUTOSCALE_WAF\",\"remark\":\"Autoscale WAF\",\"waf\":{\"class\":\"Tenant\",\"Shared\":{\"class\":\"Application\",\"template\":\"shared\",\"serviceAddress\":{\"class\":\"Service_Address\",\"virtualAddress\":\"0.0.0.0\"},\"policyWAF\":{\"class\":\"WAF_Policy\",\"file\":\"/tmp/as30-linux-medium.xml\"}},\"http\":{\"class\":\"Application\",\"template\":\"http\",\"serviceMain\":{\"class\":\"Service_HTTP\",\"virtualAddresses\":[{\"use\":\"/waf/Shared/serviceAddress\"}],\"serverTLS\":{\"bigip\":\"/Common/example-clientssl-profile\"},\"snat\":\"auto\",\"securityLogProfiles\":[{\"bigip\":\"/Common/Log illegal requests\"}],\"pool\":\"pool\",\"policyWAF\":{\"use\":\"/waf/Shared/policyWAF\"}},\"pool\":{\"class\":\"Pool\",\"monitors\":[\"http\"],\"members\":[{\"autoPopulate\":true,\"hostname\":\"demo.example.com\",\"servicePort\":80,\"addressDiscovery\":\"aws\",\"updateInterval\":15,\"tagKey\":\"applicationPoolTagKey\",\"tagValue\":\"applicationPoolTagValue\",\"addressRealm\":\"private\",\"region\":\"us-west-2\"}]}}}}'\n"
          ]
         ]
        },
        "group": "root",
        "mode": "000755",
        "owner": "root"
       },
       "/config/cloud/aws/run_autoscale_backup.sh": {
        "content": {
         "Fn::Join": [
          "",
          [
           "#!/bin/bash\n",
           "source /config/cloud/aws/onboard_config_vars\n",
           "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/autoscale.js",
           " --cloud aws --provider-options '",
           "s3Bucket:",
           {
            "Ref": "S3Bucket"
           },
           ",sqsUrl:",
           {
            "Ref": "SQSQueue"
           },
           ",mgmtPort:",
           {
            "Ref": "managementGuiPort"
           },
           "'",
           " --host localhost",
           " --port ",
           {
            "Ref": "managementGuiPort"
           },
           " --user ",
           {
            "Ref": "adminUsername"
           },
           " --password-url file:///config/cloud/aws/.adminPassword",
           " --password-encrypted",
           " --device-group autoscale-group",
           " --cluster-action backup-ucs",
           " --log-level silly --output /var/log/cloud/aws/autoscale.log"
          ]
         ]
        },
        "group": "root",
        "mode": "000755",
        "owner": "root"
       },
       "/config/cloud/aws/run_autoscale_update.sh": {
        "content": {
         "Fn::Join": [
          "",
          [
           "#!/bin/bash\n",
           "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/autoscale.js",
           " --cloud aws --provider-options '",
           "s3Bucket:",
           {
            "Ref": "S3Bucket"
           },
           ",sqsUrl:",
           {
            "Ref": "SQSQueue"
           },
           ",mgmtPort:",
           {
            "Ref": "managementGuiPort"
           },
           "'",
           " --host localhost",
           " --port ",
           {
            "Ref": "managementGuiPort"
           },
           " --user ",
           {
            "Ref": "adminUsername"
           },
           " --password-url file:///config/cloud/aws/.adminPassword",
           " --password-encrypted",
           " --device-group autoscale-group",
           " --cluster-action update",
           " --log-level silly --output /var/log/cloud/aws/autoscale.log "
          ]
         ]
        },
        "group": "root",
        "mode": "000755",
        "owner": "root"
       },
       "/config/cloud/f5-appsvcs-3.5.1-5.noarch.rpm": {
        "group": "root",
        "mode": "000755",
        "owner": "root",
        "source": "http://cdn.f5.com/product/cloudsolutions/f5-appsvcs-extension/v3.6.0/dist/lts/f5-appsvcs-3.5.1-5.noarch.rpm"
       },
       "/config/cloud/f5-cloud-libs-aws.tar.gz": {
        "group": "root",
        "mode": "000755",
        "owner": "root",
        "source": "http://cdn.f5.com/product/cloudsolutions/f5-cloud-libs-aws/v2.4.0/f5-cloud-libs-aws.tar.gz"
       },
       "/config/cloud/f5-cloud-libs.tar.gz": {
        "group": "root",
        "mode": "000755",
        "owner": "root",
        "source": "http://cdn.f5.com/product/cloudsolutions/f5-cloud-libs/v4.9.2/f5-cloud-libs.tar.gz"
       },
       "/config/cloud/f5.http.v1.2.0rc7.tmpl": {
        "group": "root",
        "mode": "000755",
        "owner": "root",
        "source": "http://cdn.f5.com/product/cloudsolutions/iapps/common/f5-http/f5.http.v1.2.0rc7.tmpl"
       },
       "/config/installCloudLibs.sh": {
        "content": {
         "Fn::Join": [
          "\n",
          [
           "#!/bin/bash",
           "echo about to execute",
           "checks=0",
           "while [ $checks -lt 120 ]; do echo checking mcpd",
           "    tmsh -a show sys mcp-state field-fmt | grep -q running",
           "    if [ $? == 0 ]; then",
           "        echo mcpd ready",
           "        break",
           "    fi",
           "    echo mcpd not ready yet",
           "    let checks=checks+1",
           "    sleep 10",
           "done",
           "echo loading verifyHash script",
           "if ! tmsh load sys config merge file /config/verifyHash; then",
           "    echo cannot validate signature of /config/verifyHash",
           "    exit",
           "fi",
           "echo loaded verifyHash",
           "declare -a filesToVerify=(\"/config/cloud/f5-cloud-libs.tar.gz\" \"/config/cloud/f5-cloud-libs-aws.tar.gz\" \"/config/cloud/f5-appsvcs-3.5.1-5.noarch.rpm\" \"/config/cloud/aws/f5.service_discovery.tmpl\" \"/config/cloud/aws/f5.cloud_logger.v1.0.0.tmpl\")",
           "for fileToVerify in \"${filesToVerify[@]}\"",
           "do",
           "    echo verifying \"$fileToVerify\"",
           "    if ! tmsh run cli script verifyHash \"$fileToVerify\"; then",
           "        echo \"$fileToVerify\" is not valid",
           "        exit 1",
           "    fi",
           "    echo verified \"$fileToVerify\"",
           "done",
           "mkdir -p /config/cloud/aws/node_modules/@f5devcentral",
           "echo expanding f5-cloud-libs.tar.gz",
           "tar xvfz /config/cloud/f5-cloud-libs.tar.gz -C /config/cloud/aws/node_modules/@f5devcentral",
           "echo installing dependencies",
           "tar xvfz /config/cloud/f5-cloud-libs-aws.tar.gz -C /config/cloud/aws/node_modules/@f5devcentral",
           "tar xvfz /config/cloud/asm-policy-linux.tar.gz -C /config/cloud",
           "echo cloud libs install complete",
           "touch /config/cloud/cloudLibsReady"
          ]
         ]
        },
        "group": "root",
        "mode": "000755",
        "owner": "root"
       },
       "/config/verifyHash": {
        "content": {
         "Fn::Join": [
          "",
          [
           "cli script /Common/verifyHash {\nproc script::run {} {\n        if {[catch {\n            set hashes(f5-cloud-libs.tar.gz) 169823bbcac9d7b87b2b59f30b899aa89545ea43901e66bfe03c40b32a90c0b20eaeac78e368c1c597af46a0769dc764ac5b484da6ae2674294e1be90990fd81\n            set hashes(f5-cloud-libs-aws.tar.gz) 076c969cbfff12efacce0879820262b7787c98645f1105667cc4927d4acfe2466ed64c777b6d35957f6df7ae266937dde42fef4c8b1f870020a366f7f910ffb5\n            set hashes(f5-cloud-libs-azure.tar.gz) 9037203b1af31288ba6993204a2abf3bd660f62e7dfb2d5825909dd69133ce5b4f5c725afabd7d2acaa693669c878daa04a6375314d985ba07c8a36dccc61c5a\n            set hashes(f5-cloud-libs-gce.tar.gz) 1677835e69967fd9882ead03cbdd24b426627133b8db9e41f6de5a26fef99c2d7b695978ac189f00f61c0737e6dbb638d42dea43a867ef4c01d9507d0ee1fb2f\n            set hashes(f5-cloud-libs-openstack.tar.gz) 5c83fe6a93a6fceb5a2e8437b5ed8cc9faf4c1621bfc9e6a0779f6c2137b45eab8ae0e7ed745c8cf821b9371245ca29749ca0b7e5663949d77496b8728f4b0f9\n            set hashes(f5-cloud-libs-consul.tar.gz) a32aab397073df92cbbba5067e5823e9b5fafca862a258b60b6b40aa0975c3989d1e110f706177b2ffbe4dde65305a260a5856594ce7ad4ef0c47b694ae4a513\n            set hashes(asm-policy-linux.tar.gz) 63b5c2a51ca09c43bd89af3773bbab87c71a6e7f6ad9410b229b4e0a1c483d46f1a9fff39d9944041b02ee9260724027414de592e99f4c2475415323e18a72e0\n            set hashes(f5.http.v1.2.0rc4.tmpl) 47c19a83ebfc7bd1e9e9c35f3424945ef8694aa437eedd17b6a387788d4db1396fefe445199b497064d76967b0d50238154190ca0bd73941298fc257df4dc034\n            set hashes(f5.http.v1.2.0rc6.tmpl) 811b14bffaab5ed0365f0106bb5ce5e4ec22385655ea3ac04de2a39bd9944f51e3714619dae7ca43662c956b5212228858f0592672a2579d4a87769186e2cbfe\n            set hashes(f5.http.v1.2.0rc7.tmpl) 21f413342e9a7a281a0f0e1301e745aa86af21a697d2e6fdc21dd279734936631e92f34bf1c2d2504c201f56ccd75c5c13baa2fe7653213689ec3c9e27dff77d\n            set hashes(f5.aws_advanced_ha.v1.3.0rc1.tmpl) 9e55149c010c1d395abdae3c3d2cb83ec13d31ed39424695e88680cf3ed5a013d626b326711d3d40ef2df46b72d414b4cb8e4f445ea0738dcbd25c4c843ac39d\n            set hashes(f5.aws_advanced_ha.v1.4.0rc1.tmpl) de068455257412a949f1eadccaee8506347e04fd69bfb645001b76f200127668e4a06be2bbb94e10fefc215cfc3665b07945e6d733cbe1a4fa1b88e881590396\n            set hashes(f5.aws_advanced_ha.v1.4.0rc2.tmpl) 6ab0bffc426df7d31913f9a474b1a07860435e366b07d77b32064acfb2952c1f207beaed77013a15e44d80d74f3253e7cf9fbbe12a90ec7128de6facd097d68f\n            set hashes(f5.aws_advanced_ha.v1.4.0rc3.tmpl) 2f2339b4bc3a23c9cfd42aae2a6de39ba0658366f25985de2ea53410a745f0f18eedc491b20f4a8dba8db48970096e2efdca7b8efffa1a83a78e5aadf218b134\n            set hashes(f5.aws_advanced_ha.v1.4.0rc4.tmpl) 2418ac8b1f1884c5c096cbac6a94d4059aaaf05927a6a4508fd1f25b8cc6077498839fbdda8176d2cf2d274a27e6a1dae2a1e3a0a9991bc65fc74fc0d02ce963\n            set hashes(f5.aws_advanced_ha.v1.4.0rc5.tmpl) 5e582187ae1a6323e095d41eddd41151d6bd38eb83c634410d4527a3d0e246a8fc62685ab0849de2ade62b0275f51264d2deaccbc16b773417f847a4a1ea9bc4\n            set hashes(asm-policy.tar.gz) 2d39ec60d006d05d8a1567a1d8aae722419e8b062ad77d6d9a31652971e5e67bc4043d81671ba2a8b12dd229ea46d205144f75374ed4cae58cefa8f9ab6533e6\n            set hashes(deploy_waf.sh) 1a3a3c6274ab08a7dc2cb73aedc8d2b2a23cd9e0eb06a2e1534b3632f250f1d897056f219d5b35d3eed1207026e89989f754840fd92969c515ae4d829214fb74\n            set hashes(f5.policy_creator.tmpl) 06539e08d115efafe55aa507ecb4e443e83bdb1f5825a9514954ef6ca56d240ed00c7b5d67bd8f67b815ee9dd46451984701d058c89dae2434c89715d375a620\n            set hashes(f5.service_discovery.tmpl) 4811a95372d1dbdbb4f62f8bcc48d4bc919fa492cda012c81e3a2fe63d7966cc36ba8677ed049a814a930473234f300d3f8bced2b0db63176d52ac99640ce81b\n            set hashes(f5.cloud_logger.v1.0.0.tmpl) 64a0ed3b5e32a037ba4e71d460385fe8b5e1aecc27dc0e8514b511863952e419a89f4a2a43326abb543bba9bc34376afa114ceda950d2c3bd08dab735ff5ad20\n            set hashes(f5-appsvcs-3.5.1-5.noarch.rpm) ba71c6e1c52d0c7077cdb25a58709b8fb7c37b34418a8338bbf67668339676d208c1a4fef4e5470c152aac84020b4ccb8074ce387de24be339711256c0fa78c8\n\n            set file_path [lindex $tmsh::argv 1]\n            set file_name [file tail $file_path]\n\n            if {![info exists hashes($file_name)]} {\n                tmsh::log err \"No hash found for $file_name\"\n                exit 1\n            }\n\n            set expected_hash $hashes($file_name)\n            set computed_hash [lindex [exec /usr/bin/openssl dgst -r -sha512 $file_path] 0]\n            if { $expected_hash eq $computed_hash } {\n                exit 0\n            }\n            tmsh::log err \"Hash does not match for $file_path\"\n            exit 1\n        }]} {\n            tmsh::log err {Unexpected error in verifyHash}\n            exit 1\n        }\n    }\n    script-signature srPhlMQ88/1ZEFP7Gy4ygpE9uiFMDRUYSpLsS+byPB/sVou6t9HPB+iAq4NSb0JZNIZn7JyCjrgTZrlcN2MRKInPOXpORplRuSOt4K8IlvhP9a+Mny8tvnsTgvTNNOGGQ3ihYeIJXQ+Zz5rYr5y6mqGYFm+Zs//vUoR2St9cHw8D1iphouiLycBDRvgq5h/lUYbgRiTrEE9u2zs1UH0rPbpYC42kEYgRhDtR82k2AxCtH5wakVegy74sAwJ8wY43+RHcgY/pF+MIuVIHd0FuKzSD1vtaQEkc7gAvXJ++5WjoL3TxmkeEVa/UP51RUzsqU+EzSnCAsX1nY8kd58msYA==\n    signing-key /Common/f5-irule\n}"
          ]
         ]
        },
        "group": "root",
        "mode": "000755",
        "owner": "root"
       },
       "/config/waitThenRun.sh": {
        "content": {
         "Fn::Join": [
          "\n",
          [
           "#!/bin/bash",
           "while true; do echo \"waiting for cloud libs install to complete\"",
           "    if [ -f /config/cloud/cloudLibsReady ]; then",
           "        break",
           "    else",
           "        sleep 10",
           "    fi",
           "done",
           "\"$@\""
          ]
         ]
        },
        "group": "root",
        "mode": "000755",
        "owner": "root"
       }
      }
     }
    }
   },
   "Properties": {
    "AssociatePublicIpAddress": {
     "Fn::FindInMap": [
      "Transformations",
      "Boolean",
      {
       "Ref": "provisionPublicIP"
      }
     ]
    },
    "BlockDeviceMappings": [
     {
      "DeviceName": "/dev/xvda",
      "Ebs": {
       "DeleteOnTermination": "true",
       "VolumeType": "gp2"
      }
     },
     {
      "DeviceName": "/dev/xvdb",
      "NoDevice": "true"
     }
    ],
    "IamInstanceProfile": {
     "Ref": "BigipAutoScalingInstanceProfile"
    },
    "ImageId": {
     "Fn::If": [
      "noCustomImageId",
      {
       "Fn::FindInMap": [
        "BigipRegionMap",
        {
         "Ref": "AWS::Region"
        },
        {
         "Fn::FindInMap": [
          "AWSBigipThrougput",
          {
           "Ref": "throughput"
          },
          "Best"
         ]
        }
       ]
      },
      {
       "Ref": "customImageId"
      }
     ]
    },
    "InstanceMonitoring": "false",
    "InstanceType": {
     "Ref": "instanceType"
    },
    "KeyName": {
     "Ref": "sshKey"
    },
    "SecurityGroups": [
     {
      "Ref": "bigipExternalSecurityGroup"
     }
    ],
    "UserData": {
     "Fn::Base64": {
      "Fn::Join": [
       "",
       [
        "#!/bin/bash -x\n",
        "/opt/aws/apitools/cfn-init/bin/cfn-init -v -s ",
        {
         "Ref": "AWS::StackId"
        },
        " -r BigipLaunchConfig",
        " --region ",
        {
         "Ref": "AWS::Region"
        },
        "\n"
       ]
      ]
     }
    }
   },
   "Type": "AWS::AutoScaling::LaunchConfiguration"
  },
  "BigipLowCpuAlarm": {
   "DependsOn": "BigipAutoscaleGroup",
   "Properties": {
    "ActionsEnabled": "true",
    "AlarmActions": [
     {
      "Ref": "BigipScaleDownPolicy"
     }
    ],
    "AlarmDescription": "CPU usage percentage below average threshold after 10 successive interval of 5 minutes",
    "ComparisonOperator": "LessThanThreshold",
    "EvaluationPeriods": "10",
    "MetricName": "tmm-stat",
    "Namespace": {
     "Ref": "BigipAutoscaleGroup"
    },
    "Period": "300",
    "Statistic": "Average",
    "Threshold": {
     "Ref": "lowCpuThreshold"
    }
   },
   "Type": "AWS::CloudWatch::Alarm"
  },
  "BigipLowbytesAlarm": {
   "DependsOn": "BigipAutoscaleGroup",
   "Properties": {
    "ActionsEnabled": "true",
    "AlarmActions": [
     {
      "Ref": "BigipScaleDownPolicy"
     }
    ],
    "AlarmDescription": "Throughput below average threshold for 10 successive intervals of 5 minutes",
    "ComparisonOperator": "LessThanThreshold",
    "EvaluationPeriods": "10",
    "MetricName": "throughput-per-sec",
    "Namespace": {
     "Ref": "BigipAutoscaleGroup"
    },
    "Period": "300",
    "Statistic": "Average",
    "Threshold": {
     "Ref": "scaleDownBytesThreshold"
    }
   },
   "Type": "AWS::CloudWatch::Alarm"
  },
  "BigipScaleDownPolicy": {
   "Properties": {
    "AdjustmentType": "ChangeInCapacity",
    "AutoScalingGroupName": {
     "Ref": "BigipAutoscaleGroup"
    },
    "Cooldown": "1500",
    "ScalingAdjustment": "-1"
   },
   "Type": "AWS::AutoScaling::ScalingPolicy"
  },
  "BigipScaleUpPolicy": {
   "Properties": {
    "AdjustmentType": "ChangeInCapacity",
    "AutoScalingGroupName": {
     "Ref": "BigipAutoscaleGroup"
    },
    "Cooldown": "1500",
    "ScalingAdjustment": "1"
   },
   "Type": "AWS::AutoScaling::ScalingPolicy"
  },
  "S3Bucket": {
   "Properties": {
    "AccessControl": "BucketOwnerFullControl"
   },
   "Type": "AWS::S3::Bucket"
  },
  "SNSTopic": {
   "Properties": {
    "Subscription": [
     {
      "Endpoint": {
       "Ref": "notificationEmail"
      },
      "Protocol": "email"
     }
    ]
   },
   "Type": "AWS::SNS::Topic"
  },
  "SQSQueue": {
   "Properties": {
    "MessageRetentionPeriod": 3600
   },
   "Type": "AWS::SQS::Queue"
  },
  "bigipExternalSecurityGroup": {
   "Properties": {
    "GroupDescription": "Public or External interface rules, including BIG-IP management",
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Ref": "restrictedSrcAddress"
      },
      "FromPort": "22",
      "IpProtocol": "tcp",
      "ToPort": "22"
     },
     {
      "CidrIp": {
       "Ref": "restrictedSrcAddress"
      },
      "FromPort": {
       "Ref": "managementGuiPort"
      },
      "IpProtocol": "tcp",
      "ToPort": {
       "Ref": "managementGuiPort"
      }
     },
     {
      "CidrIp": {
       "Ref": "restrictedSrcAddressApp"
      },
      "FromPort": "80",
      "IpProtocol": "tcp",
      "ToPort": "80"
     },
     {
      "CidrIp": {
       "Ref": "restrictedSrcAddressApp"
      },
      "FromPort": "443",
      "IpProtocol": "tcp",
      "ToPort": "443"
     }
    ],
    "Tags": [
     {
      "Key": "Application",
      "Value": {
       "Ref": "application"
      }
     },
     {
      "Key": "Costcenter",
      "Value": {
       "Ref": "costcenter"
      }
     },
     {
      "Key": "Environment",
      "Value": {
       "Ref": "environment"
      }
     },
     {
      "Key": "Group",
      "Value": {
       "Ref": "group"
      }
     },
     {
      "Key": "Name",
      "Value": {
       "Fn::Join": [
        "",
        [
         "Bigip Security Group: ",
         {
          "Ref": "AWS::StackName"
         }
        ]
       ]
      }
     },
     {
      "Key": "Owner",
      "Value": {
       "Ref": "owner"
      }
     }
    ],
    "VpcId": {
     "Ref": "Vpc"
    }
   },
   "Type": "AWS::EC2::SecurityGroup"
  },
  "bigipSecurityGroupIngressAsmPolicySync": {
   "Properties": {
    "FromPort": 6123,
    "GroupId": {
     "Ref": "bigipExternalSecurityGroup"
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Ref": "bigipExternalSecurityGroup"
    },
    "ToPort": 6128
   },
   "Type": "AWS::EC2::SecurityGroupIngress"
  },
  "bigipSecurityGroupIngressConfigSync": {
   "Properties": {
    "FromPort": 4353,
    "GroupId": {
     "Ref": "bigipExternalSecurityGroup"
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Ref": "bigipExternalSecurityGroup"
    },
    "ToPort": 4353
   },
   "Type": "AWS::EC2::SecurityGroupIngress"
  },
  "bigipSecurityGroupIngressManagementGuiPort": {
   "Properties": {
    "FromPort": {
     "Ref": "managementGuiPort"
    },
    "GroupId": {
     "Ref": "bigipExternalSecurityGroup"
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Ref": "bigipExternalSecurityGroup"
    },
    "ToPort": {
     "Ref": "managementGuiPort"
    }
   },
   "Type": "AWS::EC2::SecurityGroupIngress"
  }
 }
}
